# Ubuntu initrd snapcraft build script
# Generated by snapcraft ubuntu-initrd plugin.
# ----
# Build on:  {{ craft_arch_build_on }}
# Build for: {{ craft_arch_build_for }}
# Snapcraft version: {{ snap_version }}
# Snap data: {{ snap_data_path }}
# Snap context: {{ snap_context }}
# ----
# TODO(esh) remove; handy for debug, --debug and --shell has a different env
# Ignore SC1091 "Not following: x/y/z.sh was not specified as input"
shellcheck -e SC1091 "$0"
env

{% macro build_efi_image() %}
    {% if ubuntu_core_initrd_signed_efi_image_type == "unsigned" %}
        ubuntu-core-initramfs create-efi \
                            --unsigned \
                            --kernelver={{ kernel_abi }} \
                            --initrd {{ craft_part_build_dir }}/initrd.img \
                            --kernel {{ craft_stage_dir }}/kernel.img \
                            --output {{ craft_part_build_dir }}/kernel.efi
    {% else %}
        ubuntu-core-initramfs create-efi \
                            --kernelver={{ kernel_abi }} \
                            --key {{ signing_key_path }} \
                            --cert {{ signing_cert_path }} \
                            --initrd {{ craft_part_build_dir }}/initrd.img \
                            --kernel {{ craft_stage_dir }}/kernel.img \
                            --output {{ craft_part_build_dir }}/kernel.efi
    {%  endif %}
{% endmacro %}

#{% if not has_ubuntu_core_initrd_source_url %}
#apt download ubuntu-core-initramfs
#dpkg-deb -x ubuntu-core-initramfs*deb {{ craft_part_src_dir }}
#{% endif %}

# cp -a {{ initramfs_source_dir }} {{ template_dir }}

# ubuntu-core-initramfs doesn't support compression configuration.
# This workaround here is fragile but necessary for the moment.
sed -i 's/{{ initramfs_tool_hardcoded_compression_cmd }}/{{ ubuntu_core_initrd_compression_cmd }}/g' "/usr/bin/ubuntu-core-initramfs"

{% if has_firmware %}
ubuntu-core-initramfs create-initrd \
    --output {{ craft_part_build_dir }}/initrd.img \
    --skeleton {{ template_dir }} \
    --kernelver {{ kernel_abi }} \
    --kerneldir {{ kernel_module_dir }} \
    --firmwaredir {{ firmware_dir }}
{% else %}

ubuntu-core-initramfs create-initrd \
    --output {{ craft_part_build_dir }}/initrd.img \
    --skeleton {{ template_dir }} \
    --kernelver {{ kernel_abi }} \
    --kerneldir {{ kernel_module_dir }}
{% endif %}

# Install built initrd image
ln -f \
    {{ craft_part_build_dir }}/initrd.img-{{ kernel_abi }} \
    {{ craft_part_install_dir }}/initrd.img

{% if ubuntu_core_initrd_efi_image_type != "none" %}

    # ubuntu-core-initramfs requires a kernel.img-<version-abi> named file
    ln -f \
        {{ craft_stage_dir }}/kernel.img \
        {{ craft_stage_dir }}/kernel.img-{{ kernel_abi }}

    {{ build_efi_image() }}

    ln -f \
        {{ craft_part_build_dir }}/kernel.efi-{{ kernel_abi }} \
        {{ craft_part_install_dir }}/kernel.efi

    rm {{ craft_part_install_dir }}/initrd.img*

{% endif %}
