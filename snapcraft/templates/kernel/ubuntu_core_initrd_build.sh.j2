# Ubuntu initrd snapcraft build script
# Generated by snapcraft ubuntu-initrd plugin.
# ----
# Build on:  {{ craft_arch_build_on }}
# Build for: {{ craft_arch_build_for }}
# Snapcraft version: {{ snap_version }}
# Snap data: {{ snap_data_path }}
# Snap context: {{ snap_context }}
# ----
# TODO(esh) remove; handy for debug, --debug and --shell has a different env
# Ignore SC1091 "Not following: x/y/z.sh was not specified as input"
shellcheck -e SC1091 "$0"
env

#{% if not has_ubuntu_core_initrd_source_url %}
#apt download ubuntu-core-initramfs
#dpkg-deb -x ubuntu-core-initramfs*deb {{ craft_part_src_dir }}
#{% endif %}

# cp -a {{ initramfs_source_dir }} {{ template_dir }}

{% if exists_firmware_dir_and_is_not_empty %}
ubuntu-core-initramfs create-initrd \
    --output {{ craft_part_build_dir }}/initrd.img \
    --skeleton {{ template_dir }} \
    --kernelver {{ kernel_abi }} \
    --kerneldir {{ kernel_module_dir }} \
    --firmwaredir {{ firmware_dir }}
{% else %}
ubuntu-core-initramfs create-initrd \
    --output {{ craft_part_build_dir }}/initrd.img \
    --skeleton {{ template_dir }} \
    --kernelver {{ kernel_abi }} \
    --kerneldir {{ kernel_module_dir }}
{% endif %}

{% if build_efi_image %}
ubuntu-core-initramfs create-efi \
    --output {{ craft_part_build_dir }}/kernel.efi \
    --initrd {{ craft_part_build_dir }}/initrd.img \
    --skeleton {{ template_dir }} \
    --kernelver {{ kernel_abi }} \
    --kerneldir {{ kernel_module_dir }} \
    --key {{ signing_key_path }} \
    --cert {{ signing_cert_path }}
{% endif %}

ln -f \
    {{ craft_part_build_dir }}/initrd.img-{{ kernel_abi }} \
    {{ craft_part_install_dir }}/initrd.img
