# Ubuntu kernel snapcraft pull sources script
# Generated by snapcraft ubuntu-kernel plugin.
# ----
# TODO(esh) remove; handy for debug, --debug and --shell has a different env
# Ignore SC1091 "Not following: x/y/z.sh was not specified as input"
shellcheck -e SC1091 "$0"
env

{% if ubuntu_kernel_use_binary_package %}

{% if is_cross_compiling %}
echo \
    "deb [arch={{ target_arch }}] http://ports.ubuntu.com/ubuntu-ports \
{{ ubuntu_kernel_release_name }} main restricted universe multiverse" >> /etc/apt/sources.list.d/{{ ubuntu_kernel_release_name }}_ports.list
{% endif %}

apt-get update

KERNEL_ABI=$(apt show linux-image-{{ ubuntu_kernel_flavour }}:{{ target_arch }}/{{ ubuntu_kernel_release_name }} |
    grep Version |
    sed 's/Version: \(.*\)$/\1/g' |
    cut -d. -f1-4 |
    sed 's/\([0-9]\+\.[0-9]\+\.[0-9]\+\).\([0-9]\+\).*$/\1-\2/g'
)

echo "Kernel ABI: ${KERNEL_ABI}"
apt download linux-image-"${KERNEL_ABI}"-{{ ubuntu_kernel_flavour }}:{{ target_arch }}
apt download linux-modules-"${KERNEL_ABI}"-{{ ubuntu_kernel_flavour }}:{{ target_arch }}
apt download linux-modules-extra-"${KERNEL_ABI}"-{{ ubuntu_kernel_flavour }}:{{ target_arch }}
apt download linux-firmware

{% else %}
git clone --depth=1 --branch=master-next {{ source_repo_url }} .
{%  endif %}

{% if ubuntu_kernel_dkms|length > 0 %}
    # Headers are required to build the dkms sources
    apt download linux-headers-"${KERNEL_ABI}"-{{ ubuntu_kernel_flavour }}:{{ target_arch }}
    rm -fr {{ craft_part_src_dir }}/dkms
    mkdir {{ craft_part_build_dir }}/dkms
    cd {{ craft_part_build_dir }}/dkms
    {% for dkms in ubuntu_kernel_dkms %}
        apt download {{ dkms }}
    {% endfor %}
{% endif %}
